// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by the Game Data Editor.
//
//      Changes to this file will be lost if the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections.Generic;

using GameDataEditor;

namespace GameDataEditor
{
    public class GDEWeaponData : IGDEData
    {
        private static string isownedKey = "isowned";
		private bool _isowned;
        public bool isowned
        {
            get { return _isowned; }
            set {
                if (_isowned != value)
                {
                    _isowned = value;
                    GDEDataManager.SetBool(_key+"_"+isownedKey, _isowned);
                }
            }
        }

        private static string isEquipmentKey = "isEquipment";
		private bool _isEquipment;
        public bool isEquipment
        {
            get { return _isEquipment; }
            set {
                if (_isEquipment != value)
                {
                    _isEquipment = value;
                    GDEDataManager.SetBool(_key+"_"+isEquipmentKey, _isEquipment);
                }
            }
        }

        private static string costKey = "cost";
		private int _cost;
        public int cost
        {
            get { return _cost; }
            set {
                if (_cost != value)
                {
                    _cost = value;
                    GDEDataManager.SetInt(_key+"_"+costKey, _cost);
                }
            }
        }

        private static string currentlevelKey = "currentlevel";
		private int _currentlevel;
        public int currentlevel
        {
            get { return _currentlevel; }
            set {
                if (_currentlevel != value)
                {
                    _currentlevel = value;
                    GDEDataManager.SetInt(_key+"_"+currentlevelKey, _currentlevel);
                }
            }
        }

        private static string IdKey = "Id";
		private int _Id;
        public int Id
        {
            get { return _Id; }
            set {
                if (_Id != value)
                {
                    _Id = value;
                    GDEDataManager.SetInt(_key+"_"+IdKey, _Id);
                }
            }
        }

        private static string bulletKey = "bullet";
		private int _bullet;
        public int bullet
        {
            get { return _bullet; }
            set {
                if (_bullet != value)
                {
                    _bullet = value;
                    GDEDataManager.SetInt(_key+"_"+bulletKey, _bullet);
                }
            }
        }

        private static string bulletpriceKey = "bulletprice";
		private int _bulletprice;
        public int bulletprice
        {
            get { return _bulletprice; }
            set {
                if (_bulletprice != value)
                {
                    _bulletprice = value;
                    GDEDataManager.SetInt(_key+"_"+bulletpriceKey, _bulletprice);
                }
            }
        }

        private static string currentbulletKey = "currentbullet";
		private int _currentbullet;
        public int currentbullet
        {
            get { return _currentbullet; }
            set {
                if (_currentbullet != value)
                {
                    _currentbullet = value;
                    GDEDataManager.SetInt(_key+"_"+currentbulletKey, _currentbullet);
                }
            }
        }

        private static string nameKey = "name";
		private string _name;
        public string name
        {
            get { return _name; }
            set {
                if (_name != value)
                {
                    _name = value;
                    GDEDataManager.SetString(_key+"_"+nameKey, _name);
                }
            }
        }

        private static string thumbKey = "thumb";
		private string _thumb;
        public string thumb
        {
            get { return _thumb; }
            set {
                if (_thumb != value)
                {
                    _thumb = value;
                    GDEDataManager.SetString(_key+"_"+thumbKey, _thumb);
                }
            }
        }

        private static string levelsKey = "levels";
		public List<GDEWeaponLevelData>      levels;
		public void Set_levels()
        {
	        GDEDataManager.SetCustomList(_key+"_"+levelsKey, levels);
		}
		

        public GDEWeaponData()
		{
			_key = string.Empty;
		}

		public GDEWeaponData(string key)
		{
			_key = key;
		}
		
        public override void LoadFromDict(string dataKey, Dictionary<string, object> dict)
        {
            _key = dataKey;

			if (dict == null)
				LoadFromSavedData(dataKey);
			else
			{
                dict.TryGetBool(isownedKey, out _isowned);
                dict.TryGetBool(isEquipmentKey, out _isEquipment);
                dict.TryGetInt(costKey, out _cost);
                dict.TryGetInt(currentlevelKey, out _currentlevel);
                dict.TryGetInt(IdKey, out _Id);
                dict.TryGetInt(bulletKey, out _bullet);
                dict.TryGetInt(bulletpriceKey, out _bulletprice);
                dict.TryGetInt(currentbulletKey, out _currentbullet);
                dict.TryGetString(nameKey, out _name);
                dict.TryGetString(thumbKey, out _thumb);

                dict.TryGetCustomList(levelsKey, out levels);
                LoadFromSavedData(dataKey);
			}
		}

        public override void LoadFromSavedData(string dataKey)
		{
			_key = dataKey;
			
            _isowned = GDEDataManager.GetBool(_key+"_"+isownedKey, _isowned);
            _isEquipment = GDEDataManager.GetBool(_key+"_"+isEquipmentKey, _isEquipment);
            _cost = GDEDataManager.GetInt(_key+"_"+costKey, _cost);
            _currentlevel = GDEDataManager.GetInt(_key+"_"+currentlevelKey, _currentlevel);
            _Id = GDEDataManager.GetInt(_key+"_"+IdKey, _Id);
            _bullet = GDEDataManager.GetInt(_key+"_"+bulletKey, _bullet);
            _bulletprice = GDEDataManager.GetInt(_key+"_"+bulletpriceKey, _bulletprice);
            _currentbullet = GDEDataManager.GetInt(_key+"_"+currentbulletKey, _currentbullet);
            _name = GDEDataManager.GetString(_key+"_"+nameKey, _name);
            _thumb = GDEDataManager.GetString(_key+"_"+thumbKey, _thumb);

            levels = GDEDataManager.GetCustomList(_key+"_"+levelsKey, levels);
         }

        public void Reset_isowned()
        {
            GDEDataManager.ResetToDefault(_key, isownedKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetBool(isownedKey, out _isowned);
        }

        public void Reset_isEquipment()
        {
            GDEDataManager.ResetToDefault(_key, isEquipmentKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetBool(isEquipmentKey, out _isEquipment);
        }

        public void Reset_cost()
        {
            GDEDataManager.ResetToDefault(_key, costKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(costKey, out _cost);
        }

        public void Reset_currentlevel()
        {
            GDEDataManager.ResetToDefault(_key, currentlevelKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(currentlevelKey, out _currentlevel);
        }

        public void Reset_Id()
        {
            GDEDataManager.ResetToDefault(_key, IdKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(IdKey, out _Id);
        }

        public void Reset_bullet()
        {
            GDEDataManager.ResetToDefault(_key, bulletKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(bulletKey, out _bullet);
        }

        public void Reset_bulletprice()
        {
            GDEDataManager.ResetToDefault(_key, bulletpriceKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(bulletpriceKey, out _bulletprice);
        }

        public void Reset_currentbullet()
        {
            GDEDataManager.ResetToDefault(_key, currentbulletKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(currentbulletKey, out _currentbullet);
        }

        public void Reset_name()
        {
            GDEDataManager.ResetToDefault(_key, nameKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetString(nameKey, out _name);
        }

        public void Reset_thumb()
        {
            GDEDataManager.ResetToDefault(_key, thumbKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetString(thumbKey, out _thumb);
        }

        public void Reset_levels()
		{
			GDEDataManager.ResetToDefault(_key, levelsKey);

			Dictionary<string, object> dict;
			GDEDataManager.Get(_key, out dict);

			dict.TryGetCustomList(levelsKey, out levels);
			levels = GDEDataManager.GetCustomList(_key+"_"+levelsKey, levels);

			levels.ForEach(x => x.ResetAll());
		}

        public void ResetAll()
        {
            GDEDataManager.ResetToDefault(_key, costKey);
            GDEDataManager.ResetToDefault(_key, currentlevelKey);
            GDEDataManager.ResetToDefault(_key, levelsKey);
            GDEDataManager.ResetToDefault(_key, nameKey);
            GDEDataManager.ResetToDefault(_key, thumbKey);
            GDEDataManager.ResetToDefault(_key, isownedKey);
            GDEDataManager.ResetToDefault(_key, isEquipmentKey);
            GDEDataManager.ResetToDefault(_key, IdKey);
            GDEDataManager.ResetToDefault(_key, bulletKey);
            GDEDataManager.ResetToDefault(_key, bulletpriceKey);
            GDEDataManager.ResetToDefault(_key, currentbulletKey);

            Reset_levels();

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            LoadFromDict(_key, dict);
        }
    }
}
