// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by the Game Data Editor.
//
//      Changes to this file will be lost if the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections.Generic;

using GameDataEditor;

namespace GameDataEditor
{
    public class GDEWeaponData : IGDEData
    {
        private static string isownedKey = "isowned";
		private bool _isowned;
        public bool isowned
        {
            get { return _isowned; }
            set {
                if (_isowned != value)
                {
                    _isowned = value;
                    GDEDataManager.SetBool(_key+"_"+isownedKey, _isowned);
                }
            }
        }

        private static string isEquipmentKey = "isEquipment";
		private bool _isEquipment;
        public bool isEquipment
        {
            get { return _isEquipment; }
            set {
                if (_isEquipment != value)
                {
                    _isEquipment = value;
                    GDEDataManager.SetBool(_key+"_"+isEquipmentKey, _isEquipment);
                }
            }
        }

        private static string costKey = "cost";
		private int _cost;
        public int cost
        {
            get { return _cost; }
            set {
                if (_cost != value)
                {
                    _cost = value;
                    GDEDataManager.SetInt(_key+"_"+costKey, _cost);
                }
            }
        }

        private static string huoliKey = "huoli";
		private int _huoli;
        public int huoli
        {
            get { return _huoli; }
            set {
                if (_huoli != value)
                {
                    _huoli = value;
                    GDEDataManager.SetInt(_key+"_"+huoliKey, _huoli);
                }
            }
        }

        private static string danjiaKey = "danjia";
		private int _danjia;
        public int danjia
        {
            get { return _danjia; }
            set {
                if (_danjia != value)
                {
                    _danjia = value;
                    GDEDataManager.SetInt(_key+"_"+danjiaKey, _danjia);
                }
            }
        }

        private static string wendingxingKey = "wendingxing";
		private int _wendingxing;
        public int wendingxing
        {
            get { return _wendingxing; }
            set {
                if (_wendingxing != value)
                {
                    _wendingxing = value;
                    GDEDataManager.SetInt(_key+"_"+wendingxingKey, _wendingxing);
                }
            }
        }

        private static string shesuKey = "shesu";
		private int _shesu;
        public int shesu
        {
            get { return _shesu; }
            set {
                if (_shesu != value)
                {
                    _shesu = value;
                    GDEDataManager.SetInt(_key+"_"+shesuKey, _shesu);
                }
            }
        }

        private static string IdKey = "Id";
		private int _Id;
        public int Id
        {
            get { return _Id; }
            set {
                if (_Id != value)
                {
                    _Id = value;
                    GDEDataManager.SetInt(_key+"_"+IdKey, _Id);
                }
            }
        }

        private static string nameKey = "name";
		private string _name;
        public string name
        {
            get { return _name; }
            set {
                if (_name != value)
                {
                    _name = value;
                    GDEDataManager.SetString(_key+"_"+nameKey, _name);
                }
            }
        }

        private static string thumbKey = "thumb";
		private string _thumb;
        public string thumb
        {
            get { return _thumb; }
            set {
                if (_thumb != value)
                {
                    _thumb = value;
                    GDEDataManager.SetString(_key+"_"+thumbKey, _thumb);
                }
            }
        }

        public GDEWeaponData()
		{
			_key = string.Empty;
		}

		public GDEWeaponData(string key)
		{
			_key = key;
		}
		
        public override void LoadFromDict(string dataKey, Dictionary<string, object> dict)
        {
            _key = dataKey;

			if (dict == null)
				LoadFromSavedData(dataKey);
			else
			{
                dict.TryGetBool(isownedKey, out _isowned);
                dict.TryGetBool(isEquipmentKey, out _isEquipment);
                dict.TryGetInt(costKey, out _cost);
                dict.TryGetInt(huoliKey, out _huoli);
                dict.TryGetInt(danjiaKey, out _danjia);
                dict.TryGetInt(wendingxingKey, out _wendingxing);
                dict.TryGetInt(shesuKey, out _shesu);
                dict.TryGetInt(IdKey, out _Id);
                dict.TryGetString(nameKey, out _name);
                dict.TryGetString(thumbKey, out _thumb);
                LoadFromSavedData(dataKey);
			}
		}

        public override void LoadFromSavedData(string dataKey)
		{
			_key = dataKey;
			
            _isowned = GDEDataManager.GetBool(_key+"_"+isownedKey, _isowned);
            _isEquipment = GDEDataManager.GetBool(_key+"_"+isEquipmentKey, _isEquipment);
            _cost = GDEDataManager.GetInt(_key+"_"+costKey, _cost);
            _huoli = GDEDataManager.GetInt(_key+"_"+huoliKey, _huoli);
            _danjia = GDEDataManager.GetInt(_key+"_"+danjiaKey, _danjia);
            _wendingxing = GDEDataManager.GetInt(_key+"_"+wendingxingKey, _wendingxing);
            _shesu = GDEDataManager.GetInt(_key+"_"+shesuKey, _shesu);
            _Id = GDEDataManager.GetInt(_key+"_"+IdKey, _Id);
            _name = GDEDataManager.GetString(_key+"_"+nameKey, _name);
            _thumb = GDEDataManager.GetString(_key+"_"+thumbKey, _thumb);
         }

        public void Reset_isowned()
        {
            GDEDataManager.ResetToDefault(_key, isownedKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetBool(isownedKey, out _isowned);
        }

        public void Reset_isEquipment()
        {
            GDEDataManager.ResetToDefault(_key, isEquipmentKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetBool(isEquipmentKey, out _isEquipment);
        }

        public void Reset_cost()
        {
            GDEDataManager.ResetToDefault(_key, costKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(costKey, out _cost);
        }

        public void Reset_huoli()
        {
            GDEDataManager.ResetToDefault(_key, huoliKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(huoliKey, out _huoli);
        }

        public void Reset_danjia()
        {
            GDEDataManager.ResetToDefault(_key, danjiaKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(danjiaKey, out _danjia);
        }

        public void Reset_wendingxing()
        {
            GDEDataManager.ResetToDefault(_key, wendingxingKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(wendingxingKey, out _wendingxing);
        }

        public void Reset_shesu()
        {
            GDEDataManager.ResetToDefault(_key, shesuKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(shesuKey, out _shesu);
        }

        public void Reset_Id()
        {
            GDEDataManager.ResetToDefault(_key, IdKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(IdKey, out _Id);
        }

        public void Reset_name()
        {
            GDEDataManager.ResetToDefault(_key, nameKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetString(nameKey, out _name);
        }

        public void Reset_thumb()
        {
            GDEDataManager.ResetToDefault(_key, thumbKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetString(thumbKey, out _thumb);
        }

        public void ResetAll()
        {
            GDEDataManager.ResetToDefault(_key, costKey);
            GDEDataManager.ResetToDefault(_key, huoliKey);
            GDEDataManager.ResetToDefault(_key, danjiaKey);
            GDEDataManager.ResetToDefault(_key, wendingxingKey);
            GDEDataManager.ResetToDefault(_key, shesuKey);
            GDEDataManager.ResetToDefault(_key, nameKey);
            GDEDataManager.ResetToDefault(_key, thumbKey);
            GDEDataManager.ResetToDefault(_key, isownedKey);
            GDEDataManager.ResetToDefault(_key, isEquipmentKey);
            GDEDataManager.ResetToDefault(_key, IdKey);


            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            LoadFromDict(_key, dict);
        }
    }
}
