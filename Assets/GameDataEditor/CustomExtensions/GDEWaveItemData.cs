// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by the Game Data Editor.
//
//      Changes to this file will be lost if the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections.Generic;

using GameDataEditor;

namespace GameDataEditor
{
    public class GDEWaveItemData : IGDEData
    {
        private static string CheckPointKey = "CheckPoint";
		private bool _CheckPoint;
        public bool CheckPoint
        {
            get { return _CheckPoint; }
            set {
                if (_CheckPoint != value)
                {
                    _CheckPoint = value;
                    GDEDataManager.SetBool(_key+"_"+CheckPointKey, _CheckPoint);
                }
            }
        }

        private static string IdKey = "Id";
		private int _Id;
        public int Id
        {
            get { return _Id; }
            set {
                if (_Id != value)
                {
                    _Id = value;
                    GDEDataManager.SetInt(_key+"_"+IdKey, _Id);
                }
            }
        }

        private static string EnemyCountKey = "EnemyCount";
		private int _EnemyCount;
        public int EnemyCount
        {
            get { return _EnemyCount; }
            set {
                if (_EnemyCount != value)
                {
                    _EnemyCount = value;
                    GDEDataManager.SetInt(_key+"_"+EnemyCountKey, _EnemyCount);
                }
            }
        }

        private static string EnemyLevelKey = "EnemyLevel";
		private int _EnemyLevel;
        public int EnemyLevel
        {
            get { return _EnemyLevel; }
            set {
                if (_EnemyLevel != value)
                {
                    _EnemyLevel = value;
                    GDEDataManager.SetInt(_key+"_"+EnemyLevelKey, _EnemyLevel);
                }
            }
        }

        private static string EnemyNameKey = "EnemyName";
		private string _EnemyName;
        public string EnemyName
        {
            get { return _EnemyName; }
            set {
                if (_EnemyName != value)
                {
                    _EnemyName = value;
                    GDEDataManager.SetString(_key+"_"+EnemyNameKey, _EnemyName);
                }
            }
        }

        public GDEWaveItemData()
		{
			_key = string.Empty;
		}

		public GDEWaveItemData(string key)
		{
			_key = key;
		}
		
        public override void LoadFromDict(string dataKey, Dictionary<string, object> dict)
        {
            _key = dataKey;

			if (dict == null)
				LoadFromSavedData(dataKey);
			else
			{
                dict.TryGetBool(CheckPointKey, out _CheckPoint);
                dict.TryGetInt(IdKey, out _Id);
                dict.TryGetInt(EnemyCountKey, out _EnemyCount);
                dict.TryGetInt(EnemyLevelKey, out _EnemyLevel);
                dict.TryGetString(EnemyNameKey, out _EnemyName);
                LoadFromSavedData(dataKey);
			}
		}

        public override void LoadFromSavedData(string dataKey)
		{
			_key = dataKey;
			
            _CheckPoint = GDEDataManager.GetBool(_key+"_"+CheckPointKey, _CheckPoint);
            _Id = GDEDataManager.GetInt(_key+"_"+IdKey, _Id);
            _EnemyCount = GDEDataManager.GetInt(_key+"_"+EnemyCountKey, _EnemyCount);
            _EnemyLevel = GDEDataManager.GetInt(_key+"_"+EnemyLevelKey, _EnemyLevel);
            _EnemyName = GDEDataManager.GetString(_key+"_"+EnemyNameKey, _EnemyName);
         }

        public void Reset_CheckPoint()
        {
            GDEDataManager.ResetToDefault(_key, CheckPointKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetBool(CheckPointKey, out _CheckPoint);
        }

        public void Reset_Id()
        {
            GDEDataManager.ResetToDefault(_key, IdKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(IdKey, out _Id);
        }

        public void Reset_EnemyCount()
        {
            GDEDataManager.ResetToDefault(_key, EnemyCountKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(EnemyCountKey, out _EnemyCount);
        }

        public void Reset_EnemyLevel()
        {
            GDEDataManager.ResetToDefault(_key, EnemyLevelKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetInt(EnemyLevelKey, out _EnemyLevel);
        }

        public void Reset_EnemyName()
        {
            GDEDataManager.ResetToDefault(_key, EnemyNameKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetString(EnemyNameKey, out _EnemyName);
        }

        public void ResetAll()
        {
            GDEDataManager.ResetToDefault(_key, IdKey);
            GDEDataManager.ResetToDefault(_key, EnemyNameKey);
            GDEDataManager.ResetToDefault(_key, EnemyCountKey);
            GDEDataManager.ResetToDefault(_key, EnemyLevelKey);
            GDEDataManager.ResetToDefault(_key, CheckPointKey);


            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            LoadFromDict(_key, dict);
        }
    }
}
